// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`for in with empty: for in with empty 1`] = `
"(__obj => {
  const __keys = __obj ? Object.keys(__obj) : [];

  if (__keys.length) {
    return __keys.map(key => {
      const item = __obj[key];
      return <i key={key}>{item}</i>;
    }, this);
  }

  return \\"no data\\";
})({
  a: 1,
  b: 2,
  c: 3
});"
`;

exports[`for in with function block: for in with function block 1`] = `
"(__obj => {
  const __keys = __obj ? Object.keys(__obj) : [];

  if (__keys.length) {
    return __keys.map(key => {
      const item = __obj[key];
      console.log(item);
      return <i key={key}>{item}</i>;
    }, this);
  }
})({
  a: 1,
  b: 2,
  c: 3
});"
`;

exports[`for in: for in 1`] = `
"(__obj => {
  const __keys = __obj ? Object.keys(__obj) : [];

  if (__keys.length) {
    return __keys.map(key => {
      const item = __obj[key];
      return <i key={key}>{item}</i>;
    }, this);
  }
})({
  a: 1,
  b: 2,
  c: 3
});"
`;

exports[`for of with empty: for of with empty 1`] = `
"(__arr => {
  if (__arr?.length) {
    return __arr.map(item => <i>{item}</i>, this);
  }

  return \\"no data\\";
})([1, 2, 3]);"
`;

exports[`for of with function children empty: for of with function children empty 1`] = `
"(__arr => {
  if (__arr?.length) {
    return __arr.map(item => <i>{item}</i>, this);
  }

  return (() => 'no data')();
})([1, 2, 3]);"
`;

exports[`for of: for of 1`] = `"[1, 2, 3]?.map(item => <i>{item}</i>, this) || null;"`;

exports[`has index: has index 1`] = `"[1, 2, 3]?.map((item, index) => <i key={index}>{item}</i>, this) || null;"`;
